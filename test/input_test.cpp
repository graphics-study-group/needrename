#include <SDL3/SDL.h>
#include <cassert>
#include <iostream>
#include <fstream>

#include <cmake_config.h>
#include <MainClass.h>
#include <Functional/SDLWindow.h>
#include <Render/RenderSystem.h>
#include <Framework/world/WorldSystem.h>
#include <Asset/AssetManager/AssetManager.h>
#include <GUI/GUISystem.h>
#include <Asset/Scene/GameObjectAsset.h>
#include <Framework/component/RenderComponent/CameraComponent.h>
#include <unordered_map>
#include <string>

using namespace Engine;

std::unordered_map<Uint32, std::string> sdlEventMap = {
    {SDL_EVENT_FIRST, "SDL_EVENT_FIRST"},
    {SDL_EVENT_QUIT, "SDL_EVENT_QUIT"},
    {SDL_EVENT_TERMINATING, "SDL_EVENT_TERMINATING"},
    {SDL_EVENT_LOW_MEMORY, "SDL_EVENT_LOW_MEMORY"},
    {SDL_EVENT_WILL_ENTER_BACKGROUND, "SDL_EVENT_WILL_ENTER_BACKGROUND"},
    {SDL_EVENT_DID_ENTER_BACKGROUND, "SDL_EVENT_DID_ENTER_BACKGROUND"},
    {SDL_EVENT_WILL_ENTER_FOREGROUND, "SDL_EVENT_WILL_ENTER_FOREGROUND"},
    {SDL_EVENT_DID_ENTER_FOREGROUND, "SDL_EVENT_DID_ENTER_FOREGROUND"},
    {SDL_EVENT_LOCALE_CHANGED, "SDL_EVENT_LOCALE_CHANGED"},
    {SDL_EVENT_SYSTEM_THEME_CHANGED, "SDL_EVENT_SYSTEM_THEME_CHANGED"},
    {SDL_EVENT_DISPLAY_ORIENTATION, "SDL_EVENT_DISPLAY_ORIENTATION"},
    {SDL_EVENT_DISPLAY_ADDED, "SDL_EVENT_DISPLAY_ADDED"},
    {SDL_EVENT_DISPLAY_REMOVED, "SDL_EVENT_DISPLAY_REMOVED"},
    {SDL_EVENT_DISPLAY_MOVED, "SDL_EVENT_DISPLAY_MOVED"},
    {SDL_EVENT_DISPLAY_DESKTOP_MODE_CHANGED, "SDL_EVENT_DISPLAY_DESKTOP_MODE_CHANGED"},
    {SDL_EVENT_DISPLAY_CURRENT_MODE_CHANGED, "SDL_EVENT_DISPLAY_CURRENT_MODE_CHANGED"},
    {SDL_EVENT_DISPLAY_CONTENT_SCALE_CHANGED, "SDL_EVENT_DISPLAY_CONTENT_SCALE_CHANGED"},
    {SDL_EVENT_WINDOW_SHOWN, "SDL_EVENT_WINDOW_SHOWN"},
    {SDL_EVENT_WINDOW_HIDDEN, "SDL_EVENT_WINDOW_HIDDEN"},
    {SDL_EVENT_WINDOW_EXPOSED, "SDL_EVENT_WINDOW_EXPOSED"},
    {SDL_EVENT_WINDOW_MOVED, "SDL_EVENT_WINDOW_MOVED"},
    {SDL_EVENT_WINDOW_RESIZED, "SDL_EVENT_WINDOW_RESIZED"},
    {SDL_EVENT_WINDOW_PIXEL_SIZE_CHANGED, "SDL_EVENT_WINDOW_PIXEL_SIZE_CHANGED"},
    {SDL_EVENT_WINDOW_METAL_VIEW_RESIZED, "SDL_EVENT_WINDOW_METAL_VIEW_RESIZED"},
    {SDL_EVENT_WINDOW_MINIMIZED, "SDL_EVENT_WINDOW_MINIMIZED"},
    {SDL_EVENT_WINDOW_MAXIMIZED, "SDL_EVENT_WINDOW_MAXIMIZED"},
    {SDL_EVENT_WINDOW_RESTORED, "SDL_EVENT_WINDOW_RESTORED"},
    {SDL_EVENT_WINDOW_MOUSE_ENTER, "SDL_EVENT_WINDOW_MOUSE_ENTER"},
    {SDL_EVENT_WINDOW_MOUSE_LEAVE, "SDL_EVENT_WINDOW_MOUSE_LEAVE"},
    {SDL_EVENT_WINDOW_FOCUS_GAINED, "SDL_EVENT_WINDOW_FOCUS_GAINED"},
    {SDL_EVENT_WINDOW_FOCUS_LOST, "SDL_EVENT_WINDOW_FOCUS_LOST"},
    {SDL_EVENT_WINDOW_CLOSE_REQUESTED, "SDL_EVENT_WINDOW_CLOSE_REQUESTED"},
    {SDL_EVENT_WINDOW_HIT_TEST, "SDL_EVENT_WINDOW_HIT_TEST"},
    {SDL_EVENT_WINDOW_ICCPROF_CHANGED, "SDL_EVENT_WINDOW_ICCPROF_CHANGED"},
    {SDL_EVENT_WINDOW_DISPLAY_CHANGED, "SDL_EVENT_WINDOW_DISPLAY_CHANGED"},
    {SDL_EVENT_WINDOW_DISPLAY_SCALE_CHANGED, "SDL_EVENT_WINDOW_DISPLAY_SCALE_CHANGED"},
    {SDL_EVENT_WINDOW_SAFE_AREA_CHANGED, "SDL_EVENT_WINDOW_SAFE_AREA_CHANGED"},
    {SDL_EVENT_WINDOW_OCCLUDED, "SDL_EVENT_WINDOW_OCCLUDED"},
    {SDL_EVENT_WINDOW_ENTER_FULLSCREEN, "SDL_EVENT_WINDOW_ENTER_FULLSCREEN"},
    {SDL_EVENT_WINDOW_LEAVE_FULLSCREEN, "SDL_EVENT_WINDOW_LEAVE_FULLSCREEN"},
    {SDL_EVENT_WINDOW_DESTROYED, "SDL_EVENT_WINDOW_DESTROYED"},
    {SDL_EVENT_WINDOW_HDR_STATE_CHANGED, "SDL_EVENT_WINDOW_HDR_STATE_CHANGED"},
    {SDL_EVENT_KEY_DOWN, "SDL_EVENT_KEY_DOWN"},
    {SDL_EVENT_KEY_UP, "SDL_EVENT_KEY_UP"},
    {SDL_EVENT_TEXT_EDITING, "SDL_EVENT_TEXT_EDITING"},
    {SDL_EVENT_TEXT_INPUT, "SDL_EVENT_TEXT_INPUT"},
    {SDL_EVENT_KEYMAP_CHANGED, "SDL_EVENT_KEYMAP_CHANGED"},
    {SDL_EVENT_KEYBOARD_ADDED, "SDL_EVENT_KEYBOARD_ADDED"},
    {SDL_EVENT_KEYBOARD_REMOVED, "SDL_EVENT_KEYBOARD_REMOVED"},
    {SDL_EVENT_TEXT_EDITING_CANDIDATES, "SDL_EVENT_TEXT_EDITING_CANDIDATES"},
    {SDL_EVENT_MOUSE_MOTION, "SDL_EVENT_MOUSE_MOTION"},
    {SDL_EVENT_MOUSE_BUTTON_DOWN, "SDL_EVENT_MOUSE_BUTTON_DOWN"},
    {SDL_EVENT_MOUSE_BUTTON_UP, "SDL_EVENT_MOUSE_BUTTON_UP"},
    {SDL_EVENT_MOUSE_WHEEL, "SDL_EVENT_MOUSE_WHEEL"},
    {SDL_EVENT_MOUSE_ADDED, "SDL_EVENT_MOUSE_ADDED"},
    {SDL_EVENT_MOUSE_REMOVED, "SDL_EVENT_MOUSE_REMOVED"},
    {SDL_EVENT_JOYSTICK_AXIS_MOTION, "SDL_EVENT_JOYSTICK_AXIS_MOTION"},
    {SDL_EVENT_JOYSTICK_BALL_MOTION, "SDL_EVENT_JOYSTICK_BALL_MOTION"},
    {SDL_EVENT_JOYSTICK_HAT_MOTION, "SDL_EVENT_JOYSTICK_HAT_MOTION"},
    {SDL_EVENT_JOYSTICK_BUTTON_DOWN, "SDL_EVENT_JOYSTICK_BUTTON_DOWN"},
    {SDL_EVENT_JOYSTICK_BUTTON_UP, "SDL_EVENT_JOYSTICK_BUTTON_UP"},
    {SDL_EVENT_JOYSTICK_ADDED, "SDL_EVENT_JOYSTICK_ADDED"},
    {SDL_EVENT_JOYSTICK_REMOVED, "SDL_EVENT_JOYSTICK_REMOVED"},
    {SDL_EVENT_JOYSTICK_BATTERY_UPDATED, "SDL_EVENT_JOYSTICK_BATTERY_UPDATED"},
    {SDL_EVENT_JOYSTICK_UPDATE_COMPLETE, "SDL_EVENT_JOYSTICK_UPDATE_COMPLETE"},
    {SDL_EVENT_GAMEPAD_AXIS_MOTION, "SDL_EVENT_GAMEPAD_AXIS_MOTION"},
    {SDL_EVENT_GAMEPAD_BUTTON_DOWN, "SDL_EVENT_GAMEPAD_BUTTON_DOWN"},
    {SDL_EVENT_GAMEPAD_BUTTON_UP, "SDL_EVENT_GAMEPAD_BUTTON_UP"},
    {SDL_EVENT_GAMEPAD_ADDED, "SDL_EVENT_GAMEPAD_ADDED"},
    {SDL_EVENT_GAMEPAD_REMOVED, "SDL_EVENT_GAMEPAD_REMOVED"},
    {SDL_EVENT_GAMEPAD_REMAPPED, "SDL_EVENT_GAMEPAD_REMAPPED"},
    {SDL_EVENT_GAMEPAD_TOUCHPAD_DOWN, "SDL_EVENT_GAMEPAD_TOUCHPAD_DOWN"},
    {SDL_EVENT_GAMEPAD_TOUCHPAD_MOTION, "SDL_EVENT_GAMEPAD_TOUCHPAD_MOTION"},
    {SDL_EVENT_GAMEPAD_TOUCHPAD_UP, "SDL_EVENT_GAMEPAD_TOUCHPAD_UP"},
    {SDL_EVENT_GAMEPAD_SENSOR_UPDATE, "SDL_EVENT_GAMEPAD_SENSOR_UPDATE"},
    {SDL_EVENT_GAMEPAD_UPDATE_COMPLETE, "SDL_EVENT_GAMEPAD_UPDATE_COMPLETE"},
    {SDL_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED, "SDL_EVENT_GAMEPAD_STEAM_HANDLE_UPDATED"},
    {SDL_EVENT_FINGER_DOWN, "SDL_EVENT_FINGER_DOWN"},
    {SDL_EVENT_FINGER_UP, "SDL_EVENT_FINGER_UP"},
    {SDL_EVENT_FINGER_MOTION, "SDL_EVENT_FINGER_MOTION"},
    {SDL_EVENT_CLIPBOARD_UPDATE, "SDL_EVENT_CLIPBOARD_UPDATE"},
    {SDL_EVENT_DROP_FILE, "SDL_EVENT_DROP_FILE"},
    {SDL_EVENT_DROP_TEXT, "SDL_EVENT_DROP_TEXT"},
    {SDL_EVENT_DROP_BEGIN, "SDL_EVENT_DROP_BEGIN"},
    {SDL_EVENT_DROP_COMPLETE, "SDL_EVENT_DROP_COMPLETE"},
    {SDL_EVENT_DROP_POSITION, "SDL_EVENT_DROP_POSITION"},
    {SDL_EVENT_AUDIO_DEVICE_ADDED, "SDL_EVENT_AUDIO_DEVICE_ADDED"},
    {SDL_EVENT_AUDIO_DEVICE_REMOVED, "SDL_EVENT_AUDIO_DEVICE_REMOVED"},
    {SDL_EVENT_AUDIO_DEVICE_FORMAT_CHANGED, "SDL_EVENT_AUDIO_DEVICE_FORMAT_CHANGED"},
    {SDL_EVENT_SENSOR_UPDATE, "SDL_EVENT_SENSOR_UPDATE"},
    {SDL_EVENT_PEN_PROXIMITY_IN, "SDL_EVENT_PEN_PROXIMITY_IN"},
    {SDL_EVENT_PEN_PROXIMITY_OUT, "SDL_EVENT_PEN_PROXIMITY_OUT"},
    {SDL_EVENT_PEN_DOWN, "SDL_EVENT_PEN_DOWN"},
    {SDL_EVENT_PEN_UP, "SDL_EVENT_PEN_UP"},
    {SDL_EVENT_PEN_BUTTON_DOWN, "SDL_EVENT_PEN_BUTTON_DOWN"},
    {SDL_EVENT_PEN_BUTTON_UP, "SDL_EVENT_PEN_BUTTON_UP"},
    {SDL_EVENT_PEN_MOTION, "SDL_EVENT_PEN_MOTION"},
    {SDL_EVENT_PEN_AXIS, "SDL_EVENT_PEN_AXIS"},
    {SDL_EVENT_CAMERA_DEVICE_ADDED, "SDL_EVENT_CAMERA_DEVICE_ADDED"},
    {SDL_EVENT_CAMERA_DEVICE_REMOVED, "SDL_EVENT_CAMERA_DEVICE_REMOVED"},
    {SDL_EVENT_CAMERA_DEVICE_APPROVED, "SDL_EVENT_CAMERA_DEVICE_APPROVED"},
    {SDL_EVENT_CAMERA_DEVICE_DENIED, "SDL_EVENT_CAMERA_DEVICE_DENIED"},
    {SDL_EVENT_RENDER_TARGETS_RESET, "SDL_EVENT_RENDER_TARGETS_RESET"},
    {SDL_EVENT_RENDER_DEVICE_RESET, "SDL_EVENT_RENDER_DEVICE_RESET"},
    {SDL_EVENT_RENDER_DEVICE_LOST, "SDL_EVENT_RENDER_DEVICE_LOST"},
    {SDL_EVENT_PRIVATE0, "SDL_EVENT_PRIVATE0"},
    {SDL_EVENT_PRIVATE1, "SDL_EVENT_PRIVATE1"},
    {SDL_EVENT_PRIVATE2, "SDL_EVENT_PRIVATE2"},
    {SDL_EVENT_PRIVATE3, "SDL_EVENT_PRIVATE3"},
    {SDL_EVENT_POLL_SENTINEL, "SDL_EVENT_POLL_SENTINEL"},
    {SDL_EVENT_USER, "SDL_EVENT_USER"},
    {SDL_EVENT_LAST, "SDL_EVENT_LAST"}
};

int main(int argc, char **argv)
{
    int max_frame_count = std::numeric_limits<int>::max();
    if (argc > 1)
    {
        max_frame_count = std::atoll(argv[1]);
        if (max_frame_count == 0)
            return -1;
    }

    std::filesystem::path project_path(ENGINE_PROJECTS_DIR);
    project_path = project_path / "test_project";

    StartupOptions opt{.resol_x = 1280, .resol_y = 720, .title = "Input Test"};

    auto cmc = MainClass::GetInstance();
    cmc->Initialize(&opt, SDL_INIT_VIDEO | SDL_INIT_GAMEPAD, SDL_LOG_PRIORITY_VERBOSE);
    cmc->GetAssetManager()->SetBuiltinAssetPath(std::filesystem::path(ENGINE_BUILTIN_ASSETS_DIR));
    cmc->GetAssetManager()->LoadBuiltinAssets();

    SDL_LogInfo(SDL_LOG_CATEGORY_APPLICATION, "Loading project");
    cmc->LoadProject(project_path);

    SDL_LogInfo(SDL_LOG_CATEGORY_APPLICATION, "Entering main loop");
    cmc->LoopFiniteFrame(max_frame_count);

    return 0;
}
